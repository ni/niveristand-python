# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# Examples:
#   * Run Python 3.11 tests:
#       `tox -e py311`
#   * Run linter:
#       `tox -e flake8`
#   * Build docs:
#       `tox -e docs`
#   * Run several options at once:
#       `tox -e py39,py311,flake8,docs`

[tox]
envlist = py38, py39, py310, py311, flake8

[testenv]
commands = pytest --junitxml={envlogdir}/junit-{envname}.xml {posargs}
setenv = PYTHONPATH = {toxinidir}/tests
    vsdev.yaml = {toxinidir}/tests/vsdev.yaml
passenv = vsdev.json
deps =
    pytest
    pythonnet~=3.0.1
    pyyaml
    numpy

[pytest]
norecursedirs = .git examples docs dist tests/legacy
junit_suite_name = veristand_python

[testenv:flake8]
basepython = python
skip_install = true
deps =
    flake8
    flake8-docstrings>=0.2.7
    flake8-import-order>=0.9
    flake8-junit-report
commands =
    - flake8 src/niveristand/ tests/ examples/ setup.py --exclude tests/legacy,tests/sdf_api,_auto_generated_classes.py,src/niveristand/**/__init__.py --output-file {envlogdir}/{envname}.txt --tee
    flake8_junit {envlogdir}/{envname}.txt {envlogdir}/junit-{envname}.xml

[flake8]
# D100-D105, D107: Ignore docstring errors during development
# D203 1 blank line required before class docstring
# D401 First line should be in imperative mood
# H903 Windows style line endings not allowed in code (git should autoconvert to LF)
# I201 Missing newline before sections or imports makes files longer for no good reason
# W503: Line break occurred before a binary operator (black formatting contradicts this)
# E203: Whitespace before ':' (black formatting contradicts this)
ignore = D100,D101,D102,D103,D104,D105,D107,D203,D401,H903,I201,W503,E203
exclude =.git,__pycache__,docs/source/conf.py,old,build,dist,objects
max-line-length = 120
import-order-style = google

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
basepython = python
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -a -E -c docs -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -bhtml
    python -c 'import pathlib; print("DOCUMENTATION: file://\{0\}".format(str(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html").replace("\\", "/")))'